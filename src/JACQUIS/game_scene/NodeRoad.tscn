[gd_scene load_steps=9 format=2]

[ext_resource path="res://game_scene/ParallaxBackground.gd" type="Script" id=1]
[ext_resource path="res://assets/truck.png" type="Texture" id=2]
[ext_resource path="res://game_scene/sprites/Truck.gd" type="Script" id=3]
[ext_resource path="res://assets/backgroundRoad.png" type="Texture" id=4]

[sub_resource type="GDScript" id=3]
script/source = "extends Node2D

var ranObstacleChoice = false

func _process(delta):
	var currentSecond = int(floor(OS.get_ticks_msec() / 1000.0))

	# Make ranObstacleChoice false if we're in an odd second
	if (currentSecond % 2 != 0 and ranObstacleChoice):
		ranObstacleChoice = false

	# Executes every 2 seconds
	if (currentSecond % 2 == 0 and not ranObstacleChoice):
		# Chooses the obstacles for 2 rows, leaving 1 null
		var rowsObstacles = { 0: null, 1: null, 2: null}
		for i in _unique_random(0, 2, 2):
			rowsObstacles[i] = _random_obstacle()
		
		_add_obstacles_to_rows(rowsObstacles)
		ranObstacleChoice = true

# Escolhe n números aleatórios entre 'from' e 'to' sem repetições
func _unique_random(from, to, n):
	# Starts the Randomizer
	var rng = RandomNumberGenerator.new()
	rng.randomize()
	
	var numbers = []
	
	# Ensures we're only generating n numbers
	while len(numbers) < n:
		var randomNumber = rng.randi_range(from, to)
		
		# Keep regenerating number until it's unique
		while numbers.has(randomNumber):
			randomNumber = rng.randi_range(from, to)
		numbers.append(randomNumber)

	return numbers

# Escolhe n números aleatórios entre 'from' e 'to' sem repetições
func _random_obstacle():
	# Starts the Randomizer
	var rng = RandomNumberGenerator.new()
	rng.randomize()
	
	var availableObstacles = [\"rollOver\", \"spill\", \"crash\"]
	return availableObstacles[rng.randi_range(0, 2)]

func _add_obstacles_to_rows(rowsObstacles):
	print(rowsObstacles)
"

[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 512, 131 )

[sub_resource type="RectangleShape2D" id=4]
extents = Vector2( 513.75, 6.125 )

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 91.75, 41.5 )

[node name="NodeRoad" type="Node2D"]
position = Vector2( 5, 3 )
script = SubResource( 3 )

[node name="ParallaxBackground" type="ParallaxBackground" parent="."]
script = ExtResource( 1 )

[node name="ParallaxLayer" type="ParallaxLayer" parent="ParallaxBackground"]
z_as_relative = false
motion_mirroring = Vector2( 1024, 0 )

[node name="backgroundRoad" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2( 347.642, 328 )
scale = Vector2( 1.6, 1.64722 )
texture = ExtResource( 4 )
offset = Vector2( 102.724, -19.1231 )

[node name="StaticBody2D" type="StaticBody2D" parent="."]
position = Vector2( 3, -5 )

[node name="UpCollision" type="CollisionShape2D" parent="StaticBody2D"]
position = Vector2( 504, 134 )
shape = SubResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="StaticBody2D"]
position = Vector2( 510, 590.125 )
shape = SubResource( 4 )

[node name="Truck" type="KinematicBody2D" parent="."]
position = Vector2( 64, 442 )
script = ExtResource( 3 )

[node name="truck" type="Sprite" parent="Truck"]
position = Vector2( 141, 90 )
scale = Vector2( 1.0625, 1.02031 )
texture = ExtResource( 2 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="Truck"]
position = Vector2( 139.25, 93.5 )
shape = SubResource( 2 )
